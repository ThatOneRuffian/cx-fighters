package inputs

import "glfw"
import "main"
import "window"

var upPressed bool
var downPressed bool
var leftPressed bool
var rightPressed bool
var escapePressed bool
var spacePressed bool

func SetupCallbacks () {
    glfw.SetKeyCallback("window", "keyEventCallback")
}

func keyEventCallback (window str, key i32, scancode i32, action i32, mods i32) {
	// what is the action code
	str.print("key")
	i32.print(key)

	str.print("==================")
	
	// Exit 
	if key == KEYCODE_ESCAPE && action == 1 { 
		escapePressed = true
	}else if key == KEYCODE_ESCAPE && action == 0 {
		escapePressed = false
    }
    
    // Jump
    if key == KEYCODE_SPACE && action == 1 {
		spacePressed = true
	} else if key == KEYCODE_SPACE && action == 0 {
		spacePressed = false
    }
    
    // Left
    if key == KEYCODE_LEFT && action == 1 {
		leftPressed = true
	} else if key == KEYCODE_LEFT && action == 0 {
		leftPressed = false
    }

    // Right
    if key == KEYCODE_RIGHT  && action == 1 {
		rightPressed = true
	} else if key == KEYCODE_RIGHT  && action == 0 {
		rightPressed = false
    }
}

func updateWindow(gameWindow *Window){
	if escapePressed == true{
		gameWindow.Running = false
	}
}

func updatePlayer1 (player *Sprite){
    if rightPressed == true {
        player.velocity.x = player.maxVelocity
    } 
    if leftPressed == true {
        player.velocity.x = -1.0*player.maxVelocity
    } 
    if rightPressed == false && leftPressed == false {
        player.velocity.x = 0.0
    }
    if spacePressed == true {
		player.jumping = true
    }
    player.lastPosition = player.position
}

func updatePlayer2 (player *Sprite){
    if rightPressed == true {
        //player.velocity.x = player.maxVelocity
    } 
    if leftPressed == true {
        //player.velocity.x = -1.0*player.maxVelocity
    } 
    if rightPressed == false && leftPressed == false {
        //player.velocity.x = 0.0
    }
    if spacePressed == true {
		//player.jumping = true
    }
    player.lastPosition = player.position
}
