package inputs

import "glfw"
import "main"

// Constants ...
var BUTTON_LEFT  i32 = 0
var BUTTON_RIGHT i32 = 1

var MOUSE_RELEASE i32 = 0
var MOUSE_PRESS   i32 = 1
var MOUSE_MOVE    i32 = 38

var KEY_RELEASE i32 = 0
var KEY_PRESS   i32 = 1
var KEY_REPEAT  i32 = 2

var KEYCODE_SPACE     i32 =  32
var KEYCODE_ESCAPE    i32 = 256
var KEYCODE_ENTER     i32 = 257
var KEYCODE_TAB       i32 = 258
var KEYCODE_RIGHT     i32 = 262
var KEYCODE_LEFT      i32 = 263
var KEYCODE_DOWN      i32 = 264
var KEYCODE_UP        i32 = 265
var KEYCODE_LEFT_CTRL i32 = 341
var KEYCODE_SHIFT     i32 = 340
var KEYCODE_MENU      i32 = 343

var KEYCODE_1 i32 = 49
var KEYCODE_2 i32 = 50
var KEYCODE_3 i32 = 51
var KEYCODE_4 i32 = 52
var KEYCODE_5 i32 = 53
var KEYCODE_6 i32 = 54
var KEYCODE_7 i32 = 55
var KEYCODE_8 i32 = 56
var KEYCODE_9 i32 = 57
var KEYCODE_0 i32 = 48

var KEYCODE_A i32 = 65
var KEYCODE_B i32 = 66
var KEYCODE_D i32 = 68
var KEYCODE_S i32 = 83
var KEYCODE_V i32 = 86
var KEYCODE_W i32 = 87

var MOD_NONE  i32 = 0
var MOD_SHIFT i32 = 1
var MOD_CTRL  i32 = 2
var MOD_ALT   i32 = 4
var MOD_MENU  i32 = 8

var EVENT_ERROR    i32 = 0
var EVENT_UNUSED   i32 = 1
var EVENT_CONSUMED i32 = 2

var upPressed bool
var downPressed bool
var leftPressed bool
var rightPressed bool

func SetupCallbacks () {
    glfw.SetKeyCallback("window", "keyEventCallback")
}

func keyEventCallback (window str, key i32, scancode i32, action i32, mods i32) {
    // Up
    if key == KEYCODE_UP  && action == 1 {
		upPressed = true
	} else if key == KEYCODE_UP && action == 0 {
		upPressed = false
    }
    
    // Down
    if key == KEYCODE_DOWN && action == 1 {
		downPressed = true
	} else if key == KEYCODE_DOWN && action == 0 {
		downPressed = false
    }

    // Left
    if key == KEYCODE_LEFT && action == 1 {
		leftPressed = true
	} else if key == KEYCODE_LEFT && action == 0 {
		leftPressed = false
    }

    // Right
    if key == KEYCODE_RIGHT  && action == 1 {
		rightPressed = true
	} else if key == KEYCODE_RIGHT  && action == 0 {
		rightPressed = false
    }
}


func updatePlayer (player main.Sprite) (out Sprite) {
    if rightPressed == true {
        player.velocity.x = player.maxVelocity
    } 
    if leftPressed == true {
        player.velocity.x = -1.0*player.maxVelocity
    } 
    if rightPressed == false && leftPressed == false {
        player.velocity.x = 0.0
    }
    player.lastPosition = player.position
    out = player
}
